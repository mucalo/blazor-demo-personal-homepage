@using Models
@using Services
@inject IEmailService _emailService

    <EditForm Model="@emailMessage" OnValidSubmit="@SendEmailMessage">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name" id="interested">Name*</label>
            <input id="name" type="text" @bind="@emailMessage.Name" placeholder="Name" class="form-control" />
        </div>
        <div class="form-group">
            <label for="email">Email*</label>
            <input id="email" type="email" @bind="@emailMessage.Email" placeholder="Email" class="form-control" />

        </div>
        <div class="form-group">
            <label for="message">Message</label>
            <textarea rows="6" id="message" @bind="@emailMessage.Message" placeholder="Message" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Send</button>
        @if (!IsError && !String.IsNullOrEmpty(this.SuccessMessage))
        {
            <div class="alert alert-success" role="alert" style="margin-top: 1em;">
                @SuccessMessage
            </div>
        }
        @if (IsError)
        {
            <div class="alert alert-danger" role="alert" style="margin-top: 1em;">
                @SuccessMessage
            </div>
        }
    </EditForm>

@code {
   
    private EmailMessage emailMessage = new EmailMessage();
    private string SuccessMessage;
    private bool IsError = false;

    private void SendEmailMessage()
    {
        try
        {
            _emailService.SendEmail(emailMessage);
            this.SuccessMessage = "Mail sent successfully.";
        } catch (Exception e)
        {
            this.SuccessMessage = e.Message;
            this.IsError = true;
        }
    }
}
